<launch>
  <arg name="viewer" default="false" /> <!-- Must be globally qualified -->
  <arg name="manager" default="manager" /> <!-- Must be globally qualified -->
  <arg name="respawn" default="false" />
  <!--param name="num_worker_threads" type="int" value="4" / -->
  <!-- TODO Arguments for debayer, interpolation methods? -->

  <arg     if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />

  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" />

  <!-- arguments for camera param uri -->
  <arg name="camera_info_file_right"
       default="$(find ps4eye)/camera_info/right.yaml" />
  <arg name="camera_info_file_left"
       default="$(find ps4eye)/camera_info/left.yaml" />
  <arg name="camera_info_url_default" default="file://$(find ps4eye)/camera_info/default.yaml" />
  <arg name="camera_info_url_right" default="file://$(arg camera_info_file_right)" />
  <arg name="camera_info_url_left" default="file://$(arg camera_info_file_left)" />

  <!-- arguments for tf coords -->
  <arg name="parent_frame" default="/map" />
  <arg name="parent_transform" default="0 0 1 -1.57 0 -1.57" />

  <!-- This launchfile should bring up a node that broadcasts a ros image
       transport on /webcam/image_raw -->
  <arg name="load_driver" default="true" />
  <arg name="DEVICE" default="/dev/video0"/>
  <arg name="QUEUE" default="4"/>


  <!-- The GStreamer framerate needs to be an integral fraction -->
  <arg name="FPS" default="15/1"/>
  <!-- Available resolution should be 3448x808, 1748x408,1744x408,898x200,896x200 -->
  <arg name="width" default="1748"/>
  <arg name="height" default="408"/>
  <arg name="PUBLISH_FRAME" default="false"/>

  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="1748" />
    <param name="image_height" value="408" />
	<param name="framerate" value="15" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="/ps4eye_frame" />
    <param name="camera_info_url" value="file://$(find ps4eye)/camera_info/default.yaml" />
    <param name="camera_name" value="default" />
    <param name="io_method" value="mmap"/>
	<remap from="/usb_cam/image_raw" to="/camera/image_raw" />
  </node>

  <!-- Split image to left and right image -->
  <node pkg="nodelet" type="nodelet" name="split_right" args="load image_proc/crop_decimate $(arg manager)">
    <param name="camera_info_url" value="$(arg camera_info_url_right)" />
    <param name="queue_size" type="int" value="$(arg QUEUE)" />
    <param name="x_offset" type="int" value="48" />
    <param name="y_offset" type="int" value="0" />
    <param name="width" type="int" value="640" />
    <param name="height" type="int" value="400" />
    <param name="camera_name" value="right"/>
    <!-- remap output to right image -->
    <remap from="camera_out/image_raw" to="/stereo/right/image_raw" />
    <!-- Dont use original camera info -->
    <remap from="/stereo/right/camera_info" to="/null/right/camera_info" />
  </node>
  <node pkg="nodelet" type="nodelet" name="split_left" args="load image_proc/crop_decimate $(arg manager)">
    <param name="camera_info_url" value="$(arg camera_info_url_left)" />
    <param name="queue_size" type="int" value="$(arg QUEUE)" />
    <param name="x_offset" type="int" value="688" />
    <param name="y_offset" type="int" value="0" />
    <param name="width" type="int" value="640" />
    <param name="height" type="int" value="400" />
    <param name="camera_name" value="left"/>
    <!-- remap output to left image -->
    <remap from="camera_out/image_raw" to="/stereo/left/image_raw" />
    <!-- Dont use original camera info -->
    <remap from="/stereo/left/camera_info" to="/null/left/camera_info" />
  </node>

  <arg name="PUBLISH_TF" default="true" />
  <node name="camera_transform" pkg="tf" type="static_transform_publisher" args="$(arg parent_transform) $(arg parent_frame) /ps4eye_frame 10" if="$(arg PUBLISH_TF)"/>

  <node pkg="ps4eye" type="camera_info_publisher.py" name="camera_info_publisher" >
    <param name="left_file_name"  value="$(arg camera_info_file_left)"  />
    <param name="right_file_name" value="$(arg camera_info_file_right)" />
  </node>

  <group ns="stereo">
    <include file="$(find ps4eye)/launch/stereo_simulator.launch">
      <arg name="manager" value="/$(arg manager)" />
	  	  	
    </include>
  </group>

  <!-- start viewer -->
  <node name="stereo_view" pkg="image_view" type="stereo_view" args="stereo:=/stereo image:=image_rect_color" if="$(arg viewer)"/>

</launch>
